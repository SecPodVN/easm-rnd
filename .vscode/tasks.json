{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Validate Kubernetes YAML",
      "type": "shell",
      "command": "kubectl",
      "args": ["apply", "--dry-run=client", "--validate=true", "-f", "${file}"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      }
    },
    {
      "label": "Validate Helm Chart",
      "type": "shell",
      "command": "helm",
      "args": ["lint", "${fileDirname}"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      }
    },
    {
      "label": "Render Helm Template",
      "type": "shell",
      "command": "helm",
      "args": ["template", "test-release", "${fileDirname}", "--debug"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Template with Values",
      "type": "shell",
      "command": "helm",
      "args": [
        "template",
        "${input:releaseName}",
        "${input:chartPath}",
        "--values",
        "${input:valuesFile}",
        "--debug"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Dry-Run Install",
      "type": "shell",
      "command": "helm",
      "args": [
        "install",
        "${input:releaseName}",
        "${input:chartPath}",
        "--dry-run",
        "--debug",
        "--namespace",
        "${input:namespace}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Show Computed Values",
      "type": "shell",
      "command": "helm",
      "args": ["show", "values", "${input:chartPath}"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Get Manifest",
      "type": "shell",
      "command": "helm",
      "args": [
        "get",
        "manifest",
        "${input:releaseName}",
        "--namespace",
        "${input:namespace}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Get Values",
      "type": "shell",
      "command": "helm",
      "args": [
        "get",
        "values",
        "${input:releaseName}",
        "--namespace",
        "${input:namespace}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Helm: Lint All Charts",
      "type": "shell",
      "command": "bash",
      "args": ["-c", "for chart in src/charts/*; do helm lint $chart; done"],
      "windows": {
        "command": "powershell",
        "args": [
          "-Command",
          "Get-ChildItem -Path src/charts -Directory | ForEach-Object { helm lint $_.FullName }"
        ]
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Validate Docker Compose",
      "type": "shell",
      "command": "docker",
      "args": ["compose", "-f", "${file}", "config"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      }
    },
    {
      "label": "Validate Skaffold",
      "type": "shell",
      "command": "skaffold",
      "args": ["diagnose", "--yaml-only"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      }
    },
    {
      "label": "Render Skaffold",
      "type": "shell",
      "command": "skaffold",
      "args": ["render", "--loud"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Kubeval: Validate Kubernetes YAML",
      "type": "shell",
      "command": "kubeval",
      "args": ["--strict", "${file}"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      }
    },
    {
      "label": "yamllint: Lint YAML File",
      "type": "shell",
      "command": "yamllint",
      "args": ["-f", "parsable", "${file}"],
      "problemMatcher": {
        "owner": "yamllint",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+\\[(\\w+)\\]\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      },
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "group": {
        "kind": "test",
        "isDefault": true
      }
    },
    {
      "label": "Get Kubernetes Resources",
      "type": "shell",
      "command": "kubectl",
      "args": ["get", "all", "-n", "${input:namespace}"],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Describe Kubernetes Resource",
      "type": "shell",
      "command": "kubectl",
      "args": [
        "describe",
        "${input:resourceType}",
        "${input:resourceName}",
        "-n",
        "${input:namespace}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    }
  ],
  "inputs": [
    {
      "id": "namespace",
      "type": "promptString",
      "description": "Enter Kubernetes namespace",
      "default": "easm-rnd"
    },
    {
      "id": "resourceType",
      "type": "pickString",
      "description": "Select resource type",
      "options": [
        "pod",
        "deployment",
        "service",
        "configmap",
        "secret",
        "ingress",
        "statefulset",
        "daemonset",
        "job",
        "cronjob"
      ],
      "default": "pod"
    },
    {
      "id": "resourceName",
      "type": "promptString",
      "description": "Enter resource name"
    },
    {
      "id": "releaseName",
      "type": "promptString",
      "description": "Enter Helm release name",
      "default": "easm-api"
    },
    {
      "id": "chartPath",
      "type": "promptString",
      "description": "Enter chart path",
      "default": "src/charts/easm-api"
    },
    {
      "id": "valuesFile",
      "type": "pickString",
      "description": "Select values file",
      "options": [
        "src/charts/easm-api/values.yaml",
        "src/charts/easm-api/values-dev.yaml",
        "src/charts/easm-api/values-staging.yaml",
        "src/charts/easm-api/values-prod.yaml"
      ],
      "default": "src/charts/easm-api/values.yaml"
    }
  ]
}
