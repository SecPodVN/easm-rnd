apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
data:
  POSTGRES_HOST: "postgres"
  REDIS_HOST: "redis"
  GUNICORN_WORKERS: "4"
  DJANGO_DEBUG: "True"
  ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0"
---
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
type: Opaque
stringData:
  SECRET_KEY: "django-insecure-development-key-change-in-production"
  POSTGRES_DB: "easm_rnd"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "easm_password"
  POSTGRES_PORT: "5432"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  JWT_ACCESS_TOKEN_LIFETIME: "60"
  JWT_REFRESH_TOKEN_LIFETIME: "1440"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easm-api
  labels:
    app: easm-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easm-api
  template:
    metadata:
      labels:
        app: easm-api
    spec:
      initContainers:
        # Wait for postgres
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z postgres 5432; do
                echo "Waiting for postgres..."
                sleep 2
              done
        # Wait for redis
        - name: wait-for-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z redis 6379; do
                echo "Waiting for redis..."
                sleep 2
              done
      containers:
        - name: api
          image: easm-api
          command: ["sh", "/app/start-api.sh"]
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: POSTGRES_HOST
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: REDIS_HOST
            - name: GUNICORN_WORKERS
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: GUNICORN_WORKERS
            - name: DJANGO_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: DJANGO_DEBUG
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: ALLOWED_HOSTS
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: SECRET_KEY
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: POSTGRES_PORT
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: REDIS_PORT
            - name: REDIS_DB
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: REDIS_DB
            - name: JWT_ACCESS_TOKEN_LIFETIME
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: JWT_ACCESS_TOKEN_LIFETIME
            - name: JWT_REFRESH_TOKEN_LIFETIME
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: JWT_REFRESH_TOKEN_LIFETIME
          volumeMounts:
            - name: static-storage
              mountPath: /app/staticfiles
          livenessProbe:
            httpGet:
              path: /health/live/
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: static-storage
          persistentVolumeClaim:
            claimName: static-volume
---
apiVersion: v1
kind: Service
metadata:
  name: easm-api
  labels:
    app: easm-api
spec:
  type: ClusterIP
  selector:
    app: easm-api
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
