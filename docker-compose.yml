services:
  postgres:
    image: postgres:18-alpine
    container_name: easm-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/backend/init-easm-user.sql:/docker-entrypoint-initdb.d/init-easm-user.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-easm_db}
      - POSTGRES_USER=${POSTGRES_USER:-easm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-easm_password}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-easm_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: easm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./src/backend
    container_name: easm-api
    command: bash /app/start-api.sh
    volumes:
      - ./src/backend:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - GUNICORN_WORKERS=4
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  static_volume:
