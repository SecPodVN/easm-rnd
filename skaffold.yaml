apiVersion: skaffold/v4beta7
kind: Config
metadata:
  name: easm-rnd

build:
  artifacts:
    - image: easm-api
      context: src/backend
      docker:
        dockerfile: Dockerfile
  local:
    push: false
    useBuildkit: true

# Environment variables are automatically loaded from skaffold.env file in project root
deploy:
  helm:
    releases:
      # PostgreSQL from Bitnami (Latest LTS)
      - name: postgresql
        remoteChart: postgresql
        repo: "{{.BITNAMI_REPO_URL}}"
        version: "{{.POSTGRESQL_CHART_VERSION}}"
        namespace: "{{.K8S_NAMESPACE}}"
        createNamespace: true
        setValueTemplates:
          auth.database: "{{.POSTGRES_DB}}"
          auth.username: "{{.POSTGRES_USER}}"
          auth.password: "{{.POSTGRES_PASSWORD}}"
        setValues:
<<<<<<< HEAD
          auth.database: easm_db
          auth.username: easm_user
          auth.password: easm_password
=======
>>>>>>> 9963da2 (feat(env): Handle ',' issue in allowHosts of skaffold.env by creating dynamic yaml file)
          primary.persistence.enabled: false
          image.pullPolicy: IfNotPresent
        wait: false

      # Redis from Bitnami (Latest LTS)
      - name: redis
        remoteChart: redis
        repo: "{{.BITNAMI_REPO_URL}}"
        version: "{{.REDIS_CHART_VERSION}}"
        namespace: "{{.K8S_NAMESPACE}}"
        createNamespace: true
        setValues:
          auth.enabled: false
          architecture: standalone
          master.persistence.enabled: false
          image.pullPolicy: IfNotPresent
        wait: false

      # MongoDB from Bitnami (Latest LTS)
      - name: mongodb
        remoteChart: mongodb
        repo: https://charts.bitnami.com/bitnami

        version: "16.3.1"
        namespace: "{{.K8S_NAMESPACE}}"
        createNamespace: true
        setValues:
          auth.enabled: false
          architecture: standalone
          persistence.enabled: false
          image.pullPolicy: IfNotPresent
          image.tag: latest
        wait: false

      # EASM API from local Helm chart
      - name: easm-api
        chartPath: src/charts/easm-api
        namespace: "{{.K8S_NAMESPACE}}"
        createNamespace: true
        valuesFiles:
<<<<<<< HEAD
          - src/charts/easm-api/values.yaml
=======
          - values.yaml
          - skaffold-values.yaml # Generated file for comma-separated values
>>>>>>> 9963da2 (feat(env): Handle ',' issue in allowHosts of skaffold.env by creating dynamic yaml file)
        setValueTemplates:
          image.repository: "{{.API_IMAGE}}"
          image.tag: "{{.API_IMAGE_TAG}}"
          appVersion: "{{.API_APP_VERSION}}"
          postgresql.host: "{{.POSTGRES_HOST}}"
          postgresql.port: "{{.POSTGRES_PORT}}"
          postgresql.database: "{{.POSTGRES_DB}}"
          postgresql.username: "{{.POSTGRES_USER}}"
          postgresql.password: "{{.POSTGRES_PASSWORD}}"
          redis.host: "{{.REDIS_HOST}}"
          redis.port: "{{.REDIS_PORT}}"
          redis.db: "{{.REDIS_DB}}"
          mongodb.host: "{{.MONGODB_HOST}}"
          mongodb.port: "{{.MONGODB_PORT}}"
          mongodb.database: "{{.MONGODB_DB}}"
          django.debug: "{{.DEBUG}}"
          django.secretKey: "{{.SECRET_KEY}}"
<<<<<<< HEAD
          #django.allowedHosts: "{{.ALLOWED_HOSTS}}"
=======
          # django.allowedHosts moved to skaffold-values.yaml (handles commas properly)
>>>>>>> 9963da2 (feat(env): Handle ',' issue in allowHosts of skaffold.env by creating dynamic yaml file)
          jwt.accessTokenLifetime: "{{.JWT_ACCESS_TOKEN_LIFETIME}}"
          jwt.refreshTokenLifetime: "{{.JWT_REFRESH_TOKEN_LIFETIME}}"
          replicaCount: "{{.K8S_REPLICA_COUNT}}"
        setValues:
          image.pullPolicy: Never
          postgresql.enabled: false
          redis.enabled: false
          mongodb.enabled: false # ??? Enable if using internal MongoDB
        wait: false

<<<<<<< HEAD
=======
# Port forwarding configuration
# NOTE: localPort does NOT support template variables (Skaffold limitation)
#
# To use custom ports from skaffold.env:
#   - Use skaffold.ps1 or skaffold.sh scripts (RECOMMENDED)
#   - Or manually run: skaffold dev --port-forward-ports="${API_LOCAL_PORT}:8000,..."
#
# These default ports are used ONLY when running "skaffold dev" directly
>>>>>>> 9963da2 (feat(env): Handle ',' issue in allowHosts of skaffold.env by creating dynamic yaml file)
portForward:
  - resourceType: service
    resourceName: easm-api
    namespace: "{{.K8S_NAMESPACE}}"
    port: 8000
    localPort: 8000 # Override with skaffold.ps1/sh or CLI flags
  - resourceType: service
    resourceName: postgresql
    namespace: "{{.K8S_NAMESPACE}}"
    port: 5432
    localPort: 5432 # Override with skaffold.ps1/sh or CLI flags
  - resourceType: service
    resourceName: redis-master
    namespace: "{{.K8S_NAMESPACE}}"
    port: 6379
<<<<<<< HEAD
    localPort: 6379
  - resourceType: service
    resourceName: mongodb
    namespace: "{{.K8S_NAMESPACE}}"
    port: 27017
    localPort: 27017
=======
    localPort: 6379 # Override with skaffold.ps1/sh or CLI flags
# Profiles for custom port configuration
# Unfortunately, Skaffold's portForward.localPort does NOT support template variables
# Solutions:
#   1. Use skaffold CLI: --port-forward-ports="${API_LOCAL_PORT}:8000,..."
#   2. Edit the localPort values above directly
#   3. Use a profile with specific ports (uncomment and customize below)
#
# profiles:
#   - name: custom-ports
#     patches:
#       - op: replace
#         path: /portForward/0/localPort
#         value: 8080  # Your custom API port
#       - op: replace
#         path: /portForward/1/localPort
#         value: 5433  # Your custom PostgreSQL port
#       - op: replace
#         path: /portForward/2/localPort
#         value: 6380  # Your custom Redis port
#
# Usage: skaffold dev -p custom-ports
>>>>>>> 9963da2 (feat(env): Handle ',' issue in allowHosts of skaffold.env by creating dynamic yaml file)
